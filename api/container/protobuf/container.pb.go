// Code generated by protoc-gen-go. DO NOT EDIT.
// source: start.proto

package Container

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Packet struct {
	// Types that are valid to be assigned to Payload:
	//	*Packet_Id
	//	*Packet_Data
	//	*Packet_End
	Payload              isPacket_Payload `protobuf_oneof:"payload"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Packet) Reset()         { *m = Packet{} }
func (m *Packet) String() string { return proto.CompactTextString(m) }
func (*Packet) ProtoMessage()    {}
func (*Packet) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{0}
}

func (m *Packet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Packet.Unmarshal(m, b)
}
func (m *Packet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Packet.Marshal(b, m, deterministic)
}
func (m *Packet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Packet.Merge(m, src)
}
func (m *Packet) XXX_Size() int {
	return xxx_messageInfo_Packet.Size(m)
}
func (m *Packet) XXX_DiscardUnknown() {
	xxx_messageInfo_Packet.DiscardUnknown(m)
}

var xxx_messageInfo_Packet proto.InternalMessageInfo

type isPacket_Payload interface {
	isPacket_Payload()
}

type Packet_Id struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3,oneof"`
}

type Packet_Data struct {
	Data string `protobuf:"bytes,2,opt,name=data,proto3,oneof"`
}

type Packet_End struct {
	End string `protobuf:"bytes,3,opt,name=end,proto3,oneof"`
}

func (*Packet_Id) isPacket_Payload() {}

func (*Packet_Data) isPacket_Payload() {}

func (*Packet_End) isPacket_Payload() {}

func (m *Packet) GetPayload() isPacket_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *Packet) GetId() string {
	if x, ok := m.GetPayload().(*Packet_Id); ok {
		return x.Id
	}
	return ""
}

func (m *Packet) GetData() string {
	if x, ok := m.GetPayload().(*Packet_Data); ok {
		return x.Data
	}
	return ""
}

func (m *Packet) GetEnd() string {
	if x, ok := m.GetPayload().(*Packet_End); ok {
		return x.End
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Packet) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Packet_Id)(nil),
		(*Packet_Data)(nil),
		(*Packet_End)(nil),
	}
}

type Reply struct {
	Seq                  int32    `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	Code                 int32    `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Type                 string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{1}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *Reply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Reply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Reply) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func init() {
	proto.RegisterType((*Packet)(nil), "Container.Packet")
	proto.RegisterType((*Reply)(nil), "Container.Reply")
}

func init() { proto.RegisterFile("start.proto", fileDescriptor_7afe31759757e49a) }

var fileDescriptor_7afe31759757e49a = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x3f, 0x4f, 0xc4, 0x30,
	0x0c, 0xc5, 0x49, 0xff, 0x9d, 0x6a, 0x09, 0x51, 0x2c, 0x86, 0x88, 0x09, 0xdd, 0x74, 0x53, 0x91,
	0x60, 0x65, 0x2a, 0xcb, 0x6d, 0x9c, 0xb2, 0x32, 0x99, 0xc6, 0x42, 0x15, 0x25, 0x09, 0x6d, 0x96,
	0x7e, 0x7b, 0x54, 0xb7, 0xa5, 0x6c, 0xef, 0xfd, 0x64, 0x3f, 0x3d, 0x1b, 0x6e, 0x5a, 0xef, 0x22,
	0x75, 0x8e, 0x87, 0x3a, 0x0c, 0x3e, 0x7a, 0x2c, 0x5f, 0x37, 0x70, 0x7c, 0x83, 0xe2, 0x42, 0xed,
	0x17, 0x47, 0xac, 0x20, 0xe9, 0xac, 0x56, 0x0f, 0xea, 0x54, 0x9e, 0xaf, 0x4c, 0xd2, 0x59, 0xbc,
	0x83, 0xcc, 0x52, 0x24, 0x9d, 0xac, 0x4c, 0x1c, 0x22, 0xa4, 0xec, 0xac, 0x4e, 0x57, 0x38, 0x9b,
	0xa6, 0x84, 0x43, 0xa0, 0xa9, 0xf7, 0x64, 0x8f, 0xef, 0x90, 0x1b, 0x0e, 0xfd, 0x84, 0x15, 0xa4,
	0x23, 0xff, 0x48, 0x60, 0x6e, 0x66, 0x89, 0x08, 0x59, 0xeb, 0x2d, 0x4b, 0x5e, 0x6e, 0x44, 0xa3,
	0x86, 0xc3, 0x37, 0x8f, 0x23, 0x7d, 0xf2, 0x92, 0x68, 0x36, 0x3b, 0x4f, 0xc7, 0x29, 0xb0, 0xce,
	0x04, 0x8b, 0x7e, 0x7a, 0x81, 0xbd, 0x3a, 0x3e, 0x42, 0x71, 0x26, 0x67, 0x7b, 0xc6, 0xdb, 0xfa,
	0x8f, 0xd6, 0xcb, 0x35, 0xf7, 0xd5, 0x3f, 0x24, 0x7d, 0x4e, 0xaa, 0xb9, 0x6e, 0xf6, 0xed, 0x8b,
	0xfa, 0x28, 0xe4, 0x19, 0xcf, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x7a, 0xc8, 0xbc, 0x89, 0x1f,
	0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ContainerClient is the client API for Container service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContainerClient interface {
	Handle(ctx context.Context, opts ...grpc.CallOption) (Container_HandleClient, error)
}

type containerClient struct {
	cc grpc.ClientConnInterface
}

func NewContainerClient(cc grpc.ClientConnInterface) ContainerClient {
	return &containerClient{cc}
}

func (c *containerClient) Handle(ctx context.Context, opts ...grpc.CallOption) (Container_HandleClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Container_serviceDesc.Streams[0], "/Container.Container/Handle", opts...)
	if err != nil {
		return nil, err
	}
	x := &containerHandleClient{stream}
	return x, nil
}

type Container_HandleClient interface {
	Send(*Packet) error
	CloseAndRecv() (*Reply, error)
	grpc.ClientStream
}

type containerHandleClient struct {
	grpc.ClientStream
}

func (x *containerHandleClient) Send(m *Packet) error {
	return x.ClientStream.SendMsg(m)
}

func (x *containerHandleClient) CloseAndRecv() (*Reply, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(Reply)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ContainerServer is the server API for Container service.
type ContainerServer interface {
	Handle(Container_HandleServer) error
}

// UnimplementedContainerServer can be embedded to have forward compatible implementations.
type UnimplementedContainerServer struct {
}

func (*UnimplementedContainerServer) Handle(srv Container_HandleServer) error {
	return status.Errorf(codes.Unimplemented, "method Handle not implemented")
}

func RegisterContainerServer(s *grpc.Server, srv ContainerServer) {
	s.RegisterService(&_Container_serviceDesc, srv)
}

func _Container_Handle_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ContainerServer).Handle(&containerHandleServer{stream})
}

type Container_HandleServer interface {
	SendAndClose(*Reply) error
	Recv() (*Packet, error)
	grpc.ServerStream
}

type containerHandleServer struct {
	grpc.ServerStream
}

func (x *containerHandleServer) SendAndClose(m *Reply) error {
	return x.ServerStream.SendMsg(m)
}

func (x *containerHandleServer) Recv() (*Packet, error) {
	m := new(Packet)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Container_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Container.Container",
	HandlerType: (*ContainerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Handle",
			Handler:       _Container_Handle_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "start.proto",
}
