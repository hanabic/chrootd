// Code generated by protoc-gen-go. DO NOT EDIT.
// source: container.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StartReq struct {
	CntrId               []byte   `protobuf:"bytes,1,opt,name=cntr_id,json=cntrId,proto3" json:"cntr_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartReq) Reset()         { *m = StartReq{} }
func (m *StartReq) String() string { return proto.CompactTextString(m) }
func (*StartReq) ProtoMessage()    {}
func (*StartReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{0}
}

func (m *StartReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartReq.Unmarshal(m, b)
}
func (m *StartReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartReq.Marshal(b, m, deterministic)
}
func (m *StartReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartReq.Merge(m, src)
}
func (m *StartReq) XXX_Size() int {
	return xxx_messageInfo_StartReq.Size(m)
}
func (m *StartReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StartReq.DiscardUnknown(m)
}

var xxx_messageInfo_StartReq proto.InternalMessageInfo

func (m *StartReq) GetCntrId() []byte {
	if m != nil {
		return m.CntrId
	}
	return nil
}

type StartRes struct {
	// task id or the reason
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// reason of failure, if len(id) == 0
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartRes) Reset()         { *m = StartRes{} }
func (m *StartRes) String() string { return proto.CompactTextString(m) }
func (*StartRes) ProtoMessage()    {}
func (*StartRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{1}
}

func (m *StartRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartRes.Unmarshal(m, b)
}
func (m *StartRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartRes.Marshal(b, m, deterministic)
}
func (m *StartRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartRes.Merge(m, src)
}
func (m *StartRes) XXX_Size() int {
	return xxx_messageInfo_StartRes.Size(m)
}
func (m *StartRes) XXX_DiscardUnknown() {
	xxx_messageInfo_StartRes.DiscardUnknown(m)
}

var xxx_messageInfo_StartRes proto.InternalMessageInfo

func (m *StartRes) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *StartRes) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type StopReq struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopReq) Reset()         { *m = StopReq{} }
func (m *StopReq) String() string { return proto.CompactTextString(m) }
func (*StopReq) ProtoMessage()    {}
func (*StopReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{2}
}

func (m *StopReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopReq.Unmarshal(m, b)
}
func (m *StopReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopReq.Marshal(b, m, deterministic)
}
func (m *StopReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopReq.Merge(m, src)
}
func (m *StopReq) XXX_Size() int {
	return xxx_messageInfo_StopReq.Size(m)
}
func (m *StopReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StopReq.DiscardUnknown(m)
}

var xxx_messageInfo_StopReq proto.InternalMessageInfo

func (m *StopReq) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type StopRes struct {
	// reason of failure, if len(reason) == 0
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopRes) Reset()         { *m = StopRes{} }
func (m *StopRes) String() string { return proto.CompactTextString(m) }
func (*StopRes) ProtoMessage()    {}
func (*StopRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{3}
}

func (m *StopRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopRes.Unmarshal(m, b)
}
func (m *StopRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopRes.Marshal(b, m, deterministic)
}
func (m *StopRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopRes.Merge(m, src)
}
func (m *StopRes) XXX_Size() int {
	return xxx_messageInfo_StopRes.Size(m)
}
func (m *StopRes) XXX_DiscardUnknown() {
	xxx_messageInfo_StopRes.DiscardUnknown(m)
}

var xxx_messageInfo_StopRes proto.InternalMessageInfo

func (m *StopRes) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type Cap struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cap) Reset()         { *m = Cap{} }
func (m *Cap) String() string { return proto.CompactTextString(m) }
func (*Cap) ProtoMessage()    {}
func (*Cap) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{4}
}

func (m *Cap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cap.Unmarshal(m, b)
}
func (m *Cap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cap.Marshal(b, m, deterministic)
}
func (m *Cap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cap.Merge(m, src)
}
func (m *Cap) XXX_Size() int {
	return xxx_messageInfo_Cap.Size(m)
}
func (m *Cap) XXX_DiscardUnknown() {
	xxx_messageInfo_Cap.DiscardUnknown(m)
}

var xxx_messageInfo_Cap proto.InternalMessageInfo

type Rlimit struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Rlimit) Reset()         { *m = Rlimit{} }
func (m *Rlimit) String() string { return proto.CompactTextString(m) }
func (*Rlimit) ProtoMessage()    {}
func (*Rlimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{5}
}

func (m *Rlimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rlimit.Unmarshal(m, b)
}
func (m *Rlimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rlimit.Marshal(b, m, deterministic)
}
func (m *Rlimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rlimit.Merge(m, src)
}
func (m *Rlimit) XXX_Size() int {
	return xxx_messageInfo_Rlimit.Size(m)
}
func (m *Rlimit) XXX_DiscardUnknown() {
	xxx_messageInfo_Rlimit.DiscardUnknown(m)
}

var xxx_messageInfo_Rlimit proto.InternalMessageInfo

type Proc struct {
	// refer https://godoc.org/github.com/opencontainers/runc/libcontainer#Process
	Args          []string  `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
	Env           []string  `protobuf:"bytes,2,rep,name=env,proto3" json:"env,omitempty"`
	User          string    `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Groups        []string  `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	Cwd           string    `protobuf:"bytes,5,opt,name=cwd,proto3" json:"cwd,omitempty"`
	ConsoleWidth  uint32    `protobuf:"varint,6,opt,name=consoleWidth,proto3" json:"consoleWidth,omitempty"`
	ConsoleHeight uint32    `protobuf:"varint,7,opt,name=consoleHeight,proto3" json:"consoleHeight,omitempty"`
	Caps          []*Cap    `protobuf:"bytes,8,rep,name=caps,proto3" json:"caps,omitempty"`
	Init          bool      `protobuf:"varint,9,opt,name=init,proto3" json:"init,omitempty"`
	Rlimits       []*Rlimit `protobuf:"bytes,10,rep,name=rlimits,proto3" json:"rlimits,omitempty"`
	// following fields are not used in Exec message
	Pid                  int64    `protobuf:"varint,14,opt,name=pid,proto3" json:"pid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Proc) Reset()         { *m = Proc{} }
func (m *Proc) String() string { return proto.CompactTextString(m) }
func (*Proc) ProtoMessage()    {}
func (*Proc) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{6}
}

func (m *Proc) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Proc.Unmarshal(m, b)
}
func (m *Proc) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Proc.Marshal(b, m, deterministic)
}
func (m *Proc) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Proc.Merge(m, src)
}
func (m *Proc) XXX_Size() int {
	return xxx_messageInfo_Proc.Size(m)
}
func (m *Proc) XXX_DiscardUnknown() {
	xxx_messageInfo_Proc.DiscardUnknown(m)
}

var xxx_messageInfo_Proc proto.InternalMessageInfo

func (m *Proc) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *Proc) GetEnv() []string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *Proc) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Proc) GetGroups() []string {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *Proc) GetCwd() string {
	if m != nil {
		return m.Cwd
	}
	return ""
}

func (m *Proc) GetConsoleWidth() uint32 {
	if m != nil {
		return m.ConsoleWidth
	}
	return 0
}

func (m *Proc) GetConsoleHeight() uint32 {
	if m != nil {
		return m.ConsoleHeight
	}
	return 0
}

func (m *Proc) GetCaps() []*Cap {
	if m != nil {
		return m.Caps
	}
	return nil
}

func (m *Proc) GetInit() bool {
	if m != nil {
		return m.Init
	}
	return false
}

func (m *Proc) GetRlimits() []*Rlimit {
	if m != nil {
		return m.Rlimits
	}
	return nil
}

func (m *Proc) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

type ExecReq struct {
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// if attach == false, use stdout/stderr, and an empty reader
	Attach               bool     `protobuf:"varint,2,opt,name=attach,proto3" json:"attach,omitempty"`
	Prog                 *Proc    `protobuf:"bytes,3,opt,name=prog,proto3" json:"prog,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecReq) Reset()         { *m = ExecReq{} }
func (m *ExecReq) String() string { return proto.CompactTextString(m) }
func (*ExecReq) ProtoMessage()    {}
func (*ExecReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{7}
}

func (m *ExecReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecReq.Unmarshal(m, b)
}
func (m *ExecReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecReq.Marshal(b, m, deterministic)
}
func (m *ExecReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecReq.Merge(m, src)
}
func (m *ExecReq) XXX_Size() int {
	return xxx_messageInfo_ExecReq.Size(m)
}
func (m *ExecReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecReq.DiscardUnknown(m)
}

var xxx_messageInfo_ExecReq proto.InternalMessageInfo

func (m *ExecReq) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ExecReq) GetAttach() bool {
	if m != nil {
		return m.Attach
	}
	return false
}

func (m *ExecReq) GetProg() *Proc {
	if m != nil {
		return m.Prog
	}
	return nil
}

type ExecRes struct {
	Reason               string   `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	Info                 *Proc    `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecRes) Reset()         { *m = ExecRes{} }
func (m *ExecRes) String() string { return proto.CompactTextString(m) }
func (*ExecRes) ProtoMessage()    {}
func (*ExecRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{8}
}

func (m *ExecRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecRes.Unmarshal(m, b)
}
func (m *ExecRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecRes.Marshal(b, m, deterministic)
}
func (m *ExecRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecRes.Merge(m, src)
}
func (m *ExecRes) XXX_Size() int {
	return xxx_messageInfo_ExecRes.Size(m)
}
func (m *ExecRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecRes.DiscardUnknown(m)
}

var xxx_messageInfo_ExecRes proto.InternalMessageInfo

func (m *ExecRes) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *ExecRes) GetInfo() *Proc {
	if m != nil {
		return m.Info
	}
	return nil
}

type KillReq struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Pid                  int64    `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KillReq) Reset()         { *m = KillReq{} }
func (m *KillReq) String() string { return proto.CompactTextString(m) }
func (*KillReq) ProtoMessage()    {}
func (*KillReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{9}
}

func (m *KillReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KillReq.Unmarshal(m, b)
}
func (m *KillReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KillReq.Marshal(b, m, deterministic)
}
func (m *KillReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KillReq.Merge(m, src)
}
func (m *KillReq) XXX_Size() int {
	return xxx_messageInfo_KillReq.Size(m)
}
func (m *KillReq) XXX_DiscardUnknown() {
	xxx_messageInfo_KillReq.DiscardUnknown(m)
}

var xxx_messageInfo_KillReq proto.InternalMessageInfo

func (m *KillReq) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *KillReq) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

type KillRes struct {
	Reason               string   `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KillRes) Reset()         { *m = KillRes{} }
func (m *KillRes) String() string { return proto.CompactTextString(m) }
func (*KillRes) ProtoMessage()    {}
func (*KillRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{10}
}

func (m *KillRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KillRes.Unmarshal(m, b)
}
func (m *KillRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KillRes.Marshal(b, m, deterministic)
}
func (m *KillRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KillRes.Merge(m, src)
}
func (m *KillRes) XXX_Size() int {
	return xxx_messageInfo_KillRes.Size(m)
}
func (m *KillRes) XXX_DiscardUnknown() {
	xxx_messageInfo_KillRes.DiscardUnknown(m)
}

var xxx_messageInfo_KillRes proto.InternalMessageInfo

func (m *KillRes) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type ListReq struct {
	Filters              []*ListReq_Filter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ListReq) Reset()         { *m = ListReq{} }
func (m *ListReq) String() string { return proto.CompactTextString(m) }
func (*ListReq) ProtoMessage()    {}
func (*ListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{11}
}

func (m *ListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReq.Unmarshal(m, b)
}
func (m *ListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReq.Marshal(b, m, deterministic)
}
func (m *ListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReq.Merge(m, src)
}
func (m *ListReq) XXX_Size() int {
	return xxx_messageInfo_ListReq.Size(m)
}
func (m *ListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListReq proto.InternalMessageInfo

func (m *ListReq) GetFilters() []*ListReq_Filter {
	if m != nil {
		return m.Filters
	}
	return nil
}

type ListReq_Filter struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val                  string   `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListReq_Filter) Reset()         { *m = ListReq_Filter{} }
func (m *ListReq_Filter) String() string { return proto.CompactTextString(m) }
func (*ListReq_Filter) ProtoMessage()    {}
func (*ListReq_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{11, 0}
}

func (m *ListReq_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListReq_Filter.Unmarshal(m, b)
}
func (m *ListReq_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListReq_Filter.Marshal(b, m, deterministic)
}
func (m *ListReq_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListReq_Filter.Merge(m, src)
}
func (m *ListReq_Filter) XXX_Size() int {
	return xxx_messageInfo_ListReq_Filter.Size(m)
}
func (m *ListReq_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListReq_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_ListReq_Filter proto.InternalMessageInfo

func (m *ListReq_Filter) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ListReq_Filter) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

type ListRes struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRes) Reset()         { *m = ListRes{} }
func (m *ListRes) String() string { return proto.CompactTextString(m) }
func (*ListRes) ProtoMessage()    {}
func (*ListRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{12}
}

func (m *ListRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRes.Unmarshal(m, b)
}
func (m *ListRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRes.Marshal(b, m, deterministic)
}
func (m *ListRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRes.Merge(m, src)
}
func (m *ListRes) XXX_Size() int {
	return xxx_messageInfo_ListRes.Size(m)
}
func (m *ListRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListRes proto.InternalMessageInfo

func (m *ListRes) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type IOReq struct {
	Pid                  int64    `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Id                   []byte   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	D                    []byte   `protobuf:"bytes,3,opt,name=d,proto3" json:"d,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IOReq) Reset()         { *m = IOReq{} }
func (m *IOReq) String() string { return proto.CompactTextString(m) }
func (*IOReq) ProtoMessage()    {}
func (*IOReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{13}
}

func (m *IOReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IOReq.Unmarshal(m, b)
}
func (m *IOReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IOReq.Marshal(b, m, deterministic)
}
func (m *IOReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IOReq.Merge(m, src)
}
func (m *IOReq) XXX_Size() int {
	return xxx_messageInfo_IOReq.Size(m)
}
func (m *IOReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IOReq.DiscardUnknown(m)
}

var xxx_messageInfo_IOReq proto.InternalMessageInfo

func (m *IOReq) GetPid() int64 {
	if m != nil {
		return m.Pid
	}
	return 0
}

func (m *IOReq) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *IOReq) GetD() []byte {
	if m != nil {
		return m.D
	}
	return nil
}

type IORes struct {
	Str                  string   `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
	D                    []byte   `protobuf:"bytes,2,opt,name=d,proto3" json:"d,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IORes) Reset()         { *m = IORes{} }
func (m *IORes) String() string { return proto.CompactTextString(m) }
func (*IORes) ProtoMessage()    {}
func (*IORes) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{14}
}

func (m *IORes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IORes.Unmarshal(m, b)
}
func (m *IORes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IORes.Marshal(b, m, deterministic)
}
func (m *IORes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IORes.Merge(m, src)
}
func (m *IORes) XXX_Size() int {
	return xxx_messageInfo_IORes.Size(m)
}
func (m *IORes) XXX_DiscardUnknown() {
	xxx_messageInfo_IORes.DiscardUnknown(m)
}

var xxx_messageInfo_IORes proto.InternalMessageInfo

func (m *IORes) GetStr() string {
	if m != nil {
		return m.Str
	}
	return ""
}

func (m *IORes) GetD() []byte {
	if m != nil {
		return m.D
	}
	return nil
}

type ListProcReq struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProcReq) Reset()         { *m = ListProcReq{} }
func (m *ListProcReq) String() string { return proto.CompactTextString(m) }
func (*ListProcReq) ProtoMessage()    {}
func (*ListProcReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{15}
}

func (m *ListProcReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProcReq.Unmarshal(m, b)
}
func (m *ListProcReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProcReq.Marshal(b, m, deterministic)
}
func (m *ListProcReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProcReq.Merge(m, src)
}
func (m *ListProcReq) XXX_Size() int {
	return xxx_messageInfo_ListProcReq.Size(m)
}
func (m *ListProcReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProcReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListProcReq proto.InternalMessageInfo

func (m *ListProcReq) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type ListProcRes struct {
	Reason               string   `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	Info                 *Proc    `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListProcRes) Reset()         { *m = ListProcRes{} }
func (m *ListProcRes) String() string { return proto.CompactTextString(m) }
func (*ListProcRes) ProtoMessage()    {}
func (*ListProcRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_7afe31759757e49a, []int{16}
}

func (m *ListProcRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListProcRes.Unmarshal(m, b)
}
func (m *ListProcRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListProcRes.Marshal(b, m, deterministic)
}
func (m *ListProcRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListProcRes.Merge(m, src)
}
func (m *ListProcRes) XXX_Size() int {
	return xxx_messageInfo_ListProcRes.Size(m)
}
func (m *ListProcRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListProcRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListProcRes proto.InternalMessageInfo

func (m *ListProcRes) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *ListProcRes) GetInfo() *Proc {
	if m != nil {
		return m.Info
	}
	return nil
}

func init() {
	proto.RegisterType((*StartReq)(nil), "api.StartReq")
	proto.RegisterType((*StartRes)(nil), "api.StartRes")
	proto.RegisterType((*StopReq)(nil), "api.StopReq")
	proto.RegisterType((*StopRes)(nil), "api.StopRes")
	proto.RegisterType((*Cap)(nil), "api.Cap")
	proto.RegisterType((*Rlimit)(nil), "api.Rlimit")
	proto.RegisterType((*Proc)(nil), "api.Proc")
	proto.RegisterType((*ExecReq)(nil), "api.ExecReq")
	proto.RegisterType((*ExecRes)(nil), "api.ExecRes")
	proto.RegisterType((*KillReq)(nil), "api.KillReq")
	proto.RegisterType((*KillRes)(nil), "api.KillRes")
	proto.RegisterType((*ListReq)(nil), "api.ListReq")
	proto.RegisterType((*ListReq_Filter)(nil), "api.ListReq.Filter")
	proto.RegisterType((*ListRes)(nil), "api.ListRes")
	proto.RegisterType((*IOReq)(nil), "api.IOReq")
	proto.RegisterType((*IORes)(nil), "api.IORes")
	proto.RegisterType((*ListProcReq)(nil), "api.ListProcReq")
	proto.RegisterType((*ListProcRes)(nil), "api.ListProcRes")
}

func init() {
	proto.RegisterFile("container.proto", fileDescriptor_7afe31759757e49a)
}

var fileDescriptor_7afe31759757e49a = []byte{
	// 624 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0xcf, 0x6e, 0xd4, 0x3c,
	0x10, 0x97, 0x93, 0xec, 0x26, 0x3b, 0xbb, 0xed, 0x57, 0xf9, 0x93, 0xc0, 0x44, 0x54, 0x4a, 0x4d,
	0x2b, 0x22, 0x01, 0xab, 0x6a, 0x39, 0x70, 0xe0, 0x82, 0x28, 0x20, 0x2a, 0x90, 0x5a, 0xb9, 0x48,
	0x48, 0x5c, 0x90, 0x49, 0xd2, 0xad, 0xd5, 0x25, 0x09, 0xb6, 0x5b, 0xe0, 0x39, 0x78, 0x00, 0x5e,
	0x15, 0x79, 0xd6, 0xd9, 0x66, 0x4b, 0x7b, 0xe1, 0x36, 0xf3, 0x9b, 0xdf, 0xfc, 0x1f, 0x1b, 0xfe,
	0x2b, 0x9a, 0xda, 0x4a, 0x55, 0x57, 0x7a, 0xda, 0xea, 0xc6, 0x36, 0x34, 0x94, 0xad, 0xe2, 0x0f,
	0x20, 0x39, 0xb1, 0x52, 0x5b, 0x51, 0x7d, 0xa3, 0x77, 0x21, 0x2e, 0x6a, 0xab, 0x3f, 0xab, 0x92,
	0x91, 0x8c, 0xe4, 0x13, 0x31, 0x74, 0xea, 0x61, 0xc9, 0x67, 0x2b, 0x92, 0xa1, 0x9b, 0x10, 0xac,
	0xec, 0x81, 0x2a, 0xe9, 0x1d, 0x18, 0xea, 0x4a, 0x9a, 0xa6, 0x66, 0x41, 0x46, 0xf2, 0x91, 0xf0,
	0x1a, 0xbf, 0x07, 0xf1, 0x89, 0x6d, 0x5a, 0x17, 0xf7, 0x9a, 0x0b, 0xdf, 0xe9, 0x4c, 0xe6, 0x56,
	0xef, 0x01, 0x84, 0x07, 0xb2, 0xe5, 0x09, 0x0c, 0xc5, 0x42, 0x7d, 0x55, 0x96, 0xff, 0x0e, 0x20,
	0x3a, 0xd6, 0x4d, 0x41, 0x29, 0x44, 0x52, 0xcf, 0x0d, 0x23, 0x59, 0x98, 0x8f, 0x04, 0xca, 0x74,
	0x0b, 0xc2, 0xaa, 0xbe, 0x64, 0x01, 0x42, 0x4e, 0x74, 0xac, 0x0b, 0x53, 0x69, 0x16, 0x62, 0x54,
	0x94, 0x5d, 0xae, 0xb9, 0x6e, 0x2e, 0x5a, 0xc3, 0x22, 0x24, 0x7a, 0xcd, 0x79, 0x17, 0xdf, 0x4b,
	0x36, 0x40, 0xaa, 0x13, 0x29, 0x87, 0x49, 0xd1, 0xd4, 0xa6, 0x59, 0x54, 0x1f, 0x55, 0x69, 0xcf,
	0xd8, 0x30, 0x23, 0xf9, 0x86, 0x58, 0xc3, 0xe8, 0x2e, 0x6c, 0x78, 0xfd, 0x6d, 0xa5, 0xe6, 0x67,
	0x96, 0xc5, 0x48, 0x5a, 0x07, 0xe9, 0x7d, 0x88, 0x0a, 0xd9, 0x1a, 0x96, 0x64, 0x61, 0x3e, 0x9e,
	0x25, 0x53, 0xd9, 0xaa, 0xe9, 0x81, 0x6c, 0x05, 0xa2, 0xae, 0x4a, 0x55, 0x2b, 0xcb, 0x46, 0x19,
	0xc9, 0x13, 0x81, 0x32, 0xdd, 0x83, 0x58, 0x63, 0xcb, 0x86, 0x01, 0x3a, 0x8d, 0xd1, 0x69, 0x39,
	0x06, 0xd1, 0xd9, 0x5c, 0xd1, 0xad, 0x2a, 0xd9, 0x66, 0x46, 0xf2, 0x50, 0x38, 0x91, 0x1f, 0x43,
	0xfc, 0xfa, 0x47, 0x55, 0xdc, 0x30, 0x70, 0xd7, 0xb9, 0xb4, 0x56, 0x16, 0x67, 0x38, 0xe5, 0x44,
	0x78, 0x8d, 0x6e, 0x43, 0xd4, 0xea, 0x66, 0x8e, 0x53, 0x1a, 0xcf, 0x46, 0x98, 0xc8, 0x0d, 0x59,
	0x20, 0xcc, 0x5f, 0x74, 0x11, 0xfb, 0x7b, 0x22, 0xfd, 0x3d, 0xb9, 0x08, 0xaa, 0x3e, 0x6d, 0x30,
	0xee, 0x7a, 0x04, 0x07, 0xf3, 0x47, 0x10, 0xbf, 0x53, 0x8b, 0xc5, 0x4d, 0x35, 0xf9, 0x06, 0x82,
	0xab, 0x06, 0x76, 0x3a, 0xf2, 0xad, 0xe9, 0xf8, 0x29, 0xc4, 0xef, 0x95, 0xc1, 0x63, 0x7d, 0x02,
	0xf1, 0xa9, 0x5a, 0xd8, 0x4a, 0x2f, 0x4f, 0x61, 0x3c, 0xfb, 0x1f, 0x93, 0x7b, 0xf3, 0xf4, 0x0d,
	0xda, 0x44, 0xc7, 0x49, 0x1f, 0xc3, 0x70, 0x09, 0xb9, 0xc4, 0xe7, 0xd5, 0x4f, 0x1f, 0xd8, 0x89,
	0x0e, 0xb9, 0x94, 0x0b, 0x7f, 0x81, 0x4e, 0x74, 0xc7, 0xbb, 0x0c, 0xf4, 0xd7, 0xbd, 0xf3, 0x67,
	0x30, 0x38, 0x3c, 0x72, 0x05, 0xf8, 0x06, 0xc8, 0xaa, 0x01, 0x4f, 0x0d, 0x56, 0x2d, 0x4e, 0x80,
	0x94, 0x38, 0xdb, 0x89, 0x20, 0x25, 0x7f, 0xb8, 0x74, 0xc4, 0xd5, 0x19, 0xab, 0xbb, 0x02, 0x8c,
	0xd5, 0x4b, 0x62, 0xd0, 0x11, 0xb7, 0x61, 0xec, 0x92, 0xe3, 0x18, 0x6f, 0x78, 0x3d, 0xaf, 0xfa,
	0xe6, 0x7f, 0xdd, 0xcc, 0xec, 0x57, 0x00, 0xd1, 0x07, 0x69, 0xce, 0xe9, 0x1e, 0x0c, 0xf0, 0x6d,
	0xd3, 0x0d, 0xa4, 0x74, 0x9f, 0x41, 0xba, 0xa6, 0x1a, 0xca, 0x21, 0x72, 0x6f, 0x96, 0x4e, 0x3c,
	0x8c, 0x2f, 0x3b, 0xed, 0x6b, 0x86, 0xee, 0x42, 0xe4, 0x2a, 0xf3, 0x1c, 0xbf, 0x89, 0xb4, 0xaf,
	0x99, 0x7d, 0x42, 0xf7, 0x21, 0xe9, 0xea, 0xa7, 0x5b, 0x2b, 0x9b, 0xef, 0x36, 0xbd, 0x8e, 0x38,
	0x0f, 0x0e, 0x91, 0xbb, 0x43, 0x1f, 0xd7, 0x1f, 0x79, 0xda, 0xd7, 0xb0, 0x3e, 0x77, 0x3c, 0x9e,
	0xe3, 0x8f, 0x2e, 0xed, 0x6b, 0x86, 0x66, 0x10, 0x1c, 0x1e, 0x51, 0x40, 0x0c, 0x77, 0x98, 0x5e,
	0xc9, 0x26, 0x27, 0xfb, 0xe4, 0x65, 0xfc, 0x69, 0x30, 0x7d, 0x2e, 0x5b, 0xf5, 0x65, 0x88, 0x5f,
	0xe4, 0xd3, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x07, 0x16, 0xbe, 0x6a, 0x35, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TaskClient is the client API for Task service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskClient interface {
	// start the container
	Start(ctx context.Context, in *StartReq, opts ...grpc.CallOption) (*StartRes, error)
	Stop(ctx context.Context, in *StopReq, opts ...grpc.CallOption) (*StopRes, error)
	List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (Task_ListClient, error)
	// start a process
	ListProc(ctx context.Context, in *ListProcReq, opts ...grpc.CallOption) (Task_ListProcClient, error)
	Exec(ctx context.Context, in *ExecReq, opts ...grpc.CallOption) (*ExecRes, error)
	Kill(ctx context.Context, in *KillReq, opts ...grpc.CallOption) (*KillRes, error)
	IO(ctx context.Context, opts ...grpc.CallOption) (Task_IOClient, error)
}

type taskClient struct {
	cc grpc.ClientConnInterface
}

func NewTaskClient(cc grpc.ClientConnInterface) TaskClient {
	return &taskClient{cc}
}

func (c *taskClient) Start(ctx context.Context, in *StartReq, opts ...grpc.CallOption) (*StartRes, error) {
	out := new(StartRes)
	err := c.cc.Invoke(ctx, "/api.Task/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) Stop(ctx context.Context, in *StopReq, opts ...grpc.CallOption) (*StopRes, error) {
	out := new(StopRes)
	err := c.cc.Invoke(ctx, "/api.Task/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (Task_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Task_serviceDesc.Streams[0], "/api.Task/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &taskListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Task_ListClient interface {
	Recv() (*ListRes, error)
	grpc.ClientStream
}

type taskListClient struct {
	grpc.ClientStream
}

func (x *taskListClient) Recv() (*ListRes, error) {
	m := new(ListRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *taskClient) ListProc(ctx context.Context, in *ListProcReq, opts ...grpc.CallOption) (Task_ListProcClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Task_serviceDesc.Streams[1], "/api.Task/ListProc", opts...)
	if err != nil {
		return nil, err
	}
	x := &taskListProcClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Task_ListProcClient interface {
	Recv() (*ListProcRes, error)
	grpc.ClientStream
}

type taskListProcClient struct {
	grpc.ClientStream
}

func (x *taskListProcClient) Recv() (*ListProcRes, error) {
	m := new(ListProcRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *taskClient) Exec(ctx context.Context, in *ExecReq, opts ...grpc.CallOption) (*ExecRes, error) {
	out := new(ExecRes)
	err := c.cc.Invoke(ctx, "/api.Task/Exec", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) Kill(ctx context.Context, in *KillReq, opts ...grpc.CallOption) (*KillRes, error) {
	out := new(KillRes)
	err := c.cc.Invoke(ctx, "/api.Task/Kill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) IO(ctx context.Context, opts ...grpc.CallOption) (Task_IOClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Task_serviceDesc.Streams[2], "/api.Task/IO", opts...)
	if err != nil {
		return nil, err
	}
	x := &taskIOClient{stream}
	return x, nil
}

type Task_IOClient interface {
	Send(*IOReq) error
	Recv() (*IORes, error)
	grpc.ClientStream
}

type taskIOClient struct {
	grpc.ClientStream
}

func (x *taskIOClient) Send(m *IOReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *taskIOClient) Recv() (*IORes, error) {
	m := new(IORes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TaskServer is the server API for Task service.
type TaskServer interface {
	// start the container
	Start(context.Context, *StartReq) (*StartRes, error)
	Stop(context.Context, *StopReq) (*StopRes, error)
	List(*ListReq, Task_ListServer) error
	// start a process
	ListProc(*ListProcReq, Task_ListProcServer) error
	Exec(context.Context, *ExecReq) (*ExecRes, error)
	Kill(context.Context, *KillReq) (*KillRes, error)
	IO(Task_IOServer) error
}

// UnimplementedTaskServer can be embedded to have forward compatible implementations.
type UnimplementedTaskServer struct {
}

func (*UnimplementedTaskServer) Start(ctx context.Context, req *StartReq) (*StartRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Start not implemented")
}
func (*UnimplementedTaskServer) Stop(ctx context.Context, req *StopReq) (*StopRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedTaskServer) List(req *ListReq, srv Task_ListServer) error {
	return status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedTaskServer) ListProc(req *ListProcReq, srv Task_ListProcServer) error {
	return status.Errorf(codes.Unimplemented, "method ListProc not implemented")
}
func (*UnimplementedTaskServer) Exec(ctx context.Context, req *ExecReq) (*ExecRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Exec not implemented")
}
func (*UnimplementedTaskServer) Kill(ctx context.Context, req *KillReq) (*KillRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Kill not implemented")
}
func (*UnimplementedTaskServer) IO(srv Task_IOServer) error {
	return status.Errorf(codes.Unimplemented, "method IO not implemented")
}

func RegisterTaskServer(s *grpc.Server, srv TaskServer) {
	s.RegisterService(&_Task_serviceDesc, srv)
}

func _Task_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Task/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).Start(ctx, req.(*StartReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Task/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).Stop(ctx, req.(*StopReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TaskServer).List(m, &taskListServer{stream})
}

type Task_ListServer interface {
	Send(*ListRes) error
	grpc.ServerStream
}

type taskListServer struct {
	grpc.ServerStream
}

func (x *taskListServer) Send(m *ListRes) error {
	return x.ServerStream.SendMsg(m)
}

func _Task_ListProc_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListProcReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TaskServer).ListProc(m, &taskListProcServer{stream})
}

type Task_ListProcServer interface {
	Send(*ListProcRes) error
	grpc.ServerStream
}

type taskListProcServer struct {
	grpc.ServerStream
}

func (x *taskListProcServer) Send(m *ListProcRes) error {
	return x.ServerStream.SendMsg(m)
}

func _Task_Exec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).Exec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Task/Exec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).Exec(ctx, req.(*ExecReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_Kill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KillReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).Kill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Task/Kill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).Kill(ctx, req.(*KillReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_IO_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TaskServer).IO(&taskIOServer{stream})
}

type Task_IOServer interface {
	Send(*IORes) error
	Recv() (*IOReq, error)
	grpc.ServerStream
}

type taskIOServer struct {
	grpc.ServerStream
}

func (x *taskIOServer) Send(m *IORes) error {
	return x.ServerStream.SendMsg(m)
}

func (x *taskIOServer) Recv() (*IOReq, error) {
	m := new(IOReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Task_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Task",
	HandlerType: (*TaskServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Start",
			Handler:    _Task_Start_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _Task_Stop_Handler,
		},
		{
			MethodName: "Exec",
			Handler:    _Task_Exec_Handler,
		},
		{
			MethodName: "Kill",
			Handler:    _Task_Kill_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _Task_List_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListProc",
			Handler:       _Task_ListProc_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "IO",
			Handler:       _Task_IO_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "container.proto",
}
