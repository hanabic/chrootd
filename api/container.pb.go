// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.20.1
// 	protoc        v3.7.0
// source: container.proto

package api

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type StartReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CntrId []byte `protobuf:"bytes,1,opt,name=cntr_id,json=cntrId,proto3" json:"cntr_id,omitempty"`
}

func (x *StartReq) Reset() {
	*x = StartReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_container_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartReq) ProtoMessage() {}

func (x *StartReq) ProtoReflect() protoreflect.Message {
	mi := &file_container_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartReq.ProtoReflect.Descriptor instead.
func (*StartReq) Descriptor() ([]byte, []int) {
	return file_container_proto_rawDescGZIP(), []int{0}
}

func (x *StartReq) GetCntrId() []byte {
	if x != nil {
		return x.CntrId
	}
	return nil
}

type StartRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// task id or the reason
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// reason of failure, if len(id) == 0
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *StartRes) Reset() {
	*x = StartRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_container_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartRes) ProtoMessage() {}

func (x *StartRes) ProtoReflect() protoreflect.Message {
	mi := &file_container_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartRes.ProtoReflect.Descriptor instead.
func (*StartRes) Descriptor() ([]byte, []int) {
	return file_container_proto_rawDescGZIP(), []int{1}
}

func (x *StartRes) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *StartRes) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type StopReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *StopReq) Reset() {
	*x = StopReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_container_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopReq) ProtoMessage() {}

func (x *StopReq) ProtoReflect() protoreflect.Message {
	mi := &file_container_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopReq.ProtoReflect.Descriptor instead.
func (*StopReq) Descriptor() ([]byte, []int) {
	return file_container_proto_rawDescGZIP(), []int{2}
}

func (x *StopReq) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type StopRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// reason of failure, if len(reason) == 0
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *StopRes) Reset() {
	*x = StopRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_container_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StopRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopRes) ProtoMessage() {}

func (x *StopRes) ProtoReflect() protoreflect.Message {
	mi := &file_container_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopRes.ProtoReflect.Descriptor instead.
func (*StopRes) Descriptor() ([]byte, []int) {
	return file_container_proto_rawDescGZIP(), []int{3}
}

func (x *StopRes) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type Cap struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Cap) Reset() {
	*x = Cap{}
	if protoimpl.UnsafeEnabled {
		mi := &file_container_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cap) ProtoMessage() {}

func (x *Cap) ProtoReflect() protoreflect.Message {
	mi := &file_container_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cap.ProtoReflect.Descriptor instead.
func (*Cap) Descriptor() ([]byte, []int) {
	return file_container_proto_rawDescGZIP(), []int{4}
}

type Rlimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Rlimit) Reset() {
	*x = Rlimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_container_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rlimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rlimit) ProtoMessage() {}

func (x *Rlimit) ProtoReflect() protoreflect.Message {
	mi := &file_container_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rlimit.ProtoReflect.Descriptor instead.
func (*Rlimit) Descriptor() ([]byte, []int) {
	return file_container_proto_rawDescGZIP(), []int{5}
}

type Proc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// refer https://godoc.org/github.com/opencontainers/runc/libcontainer#Process
	Args          []string  `protobuf:"bytes,1,rep,name=args,proto3" json:"args,omitempty"`
	Env           []string  `protobuf:"bytes,2,rep,name=env,proto3" json:"env,omitempty"`
	User          string    `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Groups        []string  `protobuf:"bytes,4,rep,name=groups,proto3" json:"groups,omitempty"`
	Cwd           string    `protobuf:"bytes,5,opt,name=cwd,proto3" json:"cwd,omitempty"`
	ConsoleWidth  uint32    `protobuf:"varint,6,opt,name=consoleWidth,proto3" json:"consoleWidth,omitempty"`
	ConsoleHeight uint32    `protobuf:"varint,7,opt,name=consoleHeight,proto3" json:"consoleHeight,omitempty"`
	Caps          []*Cap    `protobuf:"bytes,8,rep,name=caps,proto3" json:"caps,omitempty"`
	Init          bool      `protobuf:"varint,9,opt,name=init,proto3" json:"init,omitempty"`
	Rlimits       []*Rlimit `protobuf:"bytes,10,rep,name=rlimits,proto3" json:"rlimits,omitempty"`
	// following fields are not used in Exec message
	Pid int64 `protobuf:"varint,14,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *Proc) Reset() {
	*x = Proc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_container_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Proc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proc) ProtoMessage() {}

func (x *Proc) ProtoReflect() protoreflect.Message {
	mi := &file_container_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proc.ProtoReflect.Descriptor instead.
func (*Proc) Descriptor() ([]byte, []int) {
	return file_container_proto_rawDescGZIP(), []int{6}
}

func (x *Proc) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *Proc) GetEnv() []string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *Proc) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Proc) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *Proc) GetCwd() string {
	if x != nil {
		return x.Cwd
	}
	return ""
}

func (x *Proc) GetConsoleWidth() uint32 {
	if x != nil {
		return x.ConsoleWidth
	}
	return 0
}

func (x *Proc) GetConsoleHeight() uint32 {
	if x != nil {
		return x.ConsoleHeight
	}
	return 0
}

func (x *Proc) GetCaps() []*Cap {
	if x != nil {
		return x.Caps
	}
	return nil
}

func (x *Proc) GetInit() bool {
	if x != nil {
		return x.Init
	}
	return false
}

func (x *Proc) GetRlimits() []*Rlimit {
	if x != nil {
		return x.Rlimits
	}
	return nil
}

func (x *Proc) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type ExecReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// if attach == false, use stdout/stderr, and an empty reader
	Attach bool  `protobuf:"varint,2,opt,name=attach,proto3" json:"attach,omitempty"`
	Prog   *Proc `protobuf:"bytes,3,opt,name=prog,proto3" json:"prog,omitempty"`
}

func (x *ExecReq) Reset() {
	*x = ExecReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_container_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecReq) ProtoMessage() {}

func (x *ExecReq) ProtoReflect() protoreflect.Message {
	mi := &file_container_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecReq.ProtoReflect.Descriptor instead.
func (*ExecReq) Descriptor() ([]byte, []int) {
	return file_container_proto_rawDescGZIP(), []int{7}
}

func (x *ExecReq) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *ExecReq) GetAttach() bool {
	if x != nil {
		return x.Attach
	}
	return false
}

func (x *ExecReq) GetProg() *Proc {
	if x != nil {
		return x.Prog
	}
	return nil
}

type ExecRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	Info   *Proc  `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *ExecRes) Reset() {
	*x = ExecRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_container_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecRes) ProtoMessage() {}

func (x *ExecRes) ProtoReflect() protoreflect.Message {
	mi := &file_container_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecRes.ProtoReflect.Descriptor instead.
func (*ExecRes) Descriptor() ([]byte, []int) {
	return file_container_proto_rawDescGZIP(), []int{8}
}

func (x *ExecRes) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ExecRes) GetInfo() *Proc {
	if x != nil {
		return x.Info
	}
	return nil
}

type KillReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Pid int64  `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *KillReq) Reset() {
	*x = KillReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_container_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillReq) ProtoMessage() {}

func (x *KillReq) ProtoReflect() protoreflect.Message {
	mi := &file_container_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillReq.ProtoReflect.Descriptor instead.
func (*KillReq) Descriptor() ([]byte, []int) {
	return file_container_proto_rawDescGZIP(), []int{9}
}

func (x *KillReq) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *KillReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type KillRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *KillRes) Reset() {
	*x = KillRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_container_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillRes) ProtoMessage() {}

func (x *KillRes) ProtoReflect() protoreflect.Message {
	mi := &file_container_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillRes.ProtoReflect.Descriptor instead.
func (*KillRes) Descriptor() ([]byte, []int) {
	return file_container_proto_rawDescGZIP(), []int{10}
}

func (x *KillRes) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters []*ListReq_Filter `protobuf:"bytes,1,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *ListReq) Reset() {
	*x = ListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_container_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReq) ProtoMessage() {}

func (x *ListReq) ProtoReflect() protoreflect.Message {
	mi := &file_container_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReq.ProtoReflect.Descriptor instead.
func (*ListReq) Descriptor() ([]byte, []int) {
	return file_container_proto_rawDescGZIP(), []int{11}
}

func (x *ListReq) GetFilters() []*ListReq_Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type ListRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ListRes) Reset() {
	*x = ListRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_container_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRes) ProtoMessage() {}

func (x *ListRes) ProtoReflect() protoreflect.Message {
	mi := &file_container_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRes.ProtoReflect.Descriptor instead.
func (*ListRes) Descriptor() ([]byte, []int) {
	return file_container_proto_rawDescGZIP(), []int{12}
}

func (x *ListRes) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type IOReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid int64  `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	Id  []byte `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	D   []byte `protobuf:"bytes,3,opt,name=d,proto3" json:"d,omitempty"`
}

func (x *IOReq) Reset() {
	*x = IOReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_container_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IOReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IOReq) ProtoMessage() {}

func (x *IOReq) ProtoReflect() protoreflect.Message {
	mi := &file_container_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IOReq.ProtoReflect.Descriptor instead.
func (*IOReq) Descriptor() ([]byte, []int) {
	return file_container_proto_rawDescGZIP(), []int{13}
}

func (x *IOReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *IOReq) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *IOReq) GetD() []byte {
	if x != nil {
		return x.D
	}
	return nil
}

type IORes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Str string `protobuf:"bytes,1,opt,name=str,proto3" json:"str,omitempty"`
	D   []byte `protobuf:"bytes,2,opt,name=d,proto3" json:"d,omitempty"`
}

func (x *IORes) Reset() {
	*x = IORes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_container_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IORes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IORes) ProtoMessage() {}

func (x *IORes) ProtoReflect() protoreflect.Message {
	mi := &file_container_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IORes.ProtoReflect.Descriptor instead.
func (*IORes) Descriptor() ([]byte, []int) {
	return file_container_proto_rawDescGZIP(), []int{14}
}

func (x *IORes) GetStr() string {
	if x != nil {
		return x.Str
	}
	return ""
}

func (x *IORes) GetD() []byte {
	if x != nil {
		return x.D
	}
	return nil
}

type ListProcReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ListProcReq) Reset() {
	*x = ListProcReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_container_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProcReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProcReq) ProtoMessage() {}

func (x *ListProcReq) ProtoReflect() protoreflect.Message {
	mi := &file_container_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProcReq.ProtoReflect.Descriptor instead.
func (*ListProcReq) Descriptor() ([]byte, []int) {
	return file_container_proto_rawDescGZIP(), []int{15}
}

func (x *ListProcReq) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type ListProcRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
	Info   *Proc  `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *ListProcRes) Reset() {
	*x = ListProcRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_container_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProcRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProcRes) ProtoMessage() {}

func (x *ListProcRes) ProtoReflect() protoreflect.Message {
	mi := &file_container_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProcRes.ProtoReflect.Descriptor instead.
func (*ListProcRes) Descriptor() ([]byte, []int) {
	return file_container_proto_rawDescGZIP(), []int{16}
}

func (x *ListProcRes) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ListProcRes) GetInfo() *Proc {
	if x != nil {
		return x.Info
	}
	return nil
}

type ListReq_Filter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Val string `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (x *ListReq_Filter) Reset() {
	*x = ListReq_Filter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_container_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListReq_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReq_Filter) ProtoMessage() {}

func (x *ListReq_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_container_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReq_Filter.ProtoReflect.Descriptor instead.
func (*ListReq_Filter) Descriptor() ([]byte, []int) {
	return file_container_proto_rawDescGZIP(), []int{11, 0}
}

func (x *ListReq_Filter) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ListReq_Filter) GetVal() string {
	if x != nil {
		return x.Val
	}
	return ""
}

var File_container_proto protoreflect.FileDescriptor

var file_container_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x22, 0x23, 0x0a, 0x08, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6e, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6e, 0x74, 0x72, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x08, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22,
	0x19, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x21, 0x0a, 0x07, 0x53, 0x74,
	0x6f, 0x70, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x05, 0x0a,
	0x03, 0x43, 0x61, 0x70, 0x22, 0x08, 0x0a, 0x06, 0x52, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x9f,
	0x02, 0x0a, 0x04, 0x50, 0x72, 0x6f, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x6e, 0x76, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x77, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x77, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1c, 0x0a, 0x04, 0x63, 0x61, 0x70, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x61, 0x70, 0x52, 0x04, 0x63,
	0x61, 0x70, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x69, 0x6e, 0x69, 0x74, 0x12, 0x25, 0x0a, 0x07, 0x72, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x07, 0x72, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64,
	0x22, 0x50, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x12, 0x1d, 0x0a, 0x04, 0x70, 0x72, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x04, 0x70, 0x72,
	0x6f, 0x67, 0x22, 0x40, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x2b, 0x0a, 0x07, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69,
	0x64, 0x22, 0x21, 0x0a, 0x07, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x22, 0x66, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x2d, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x2e, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x2c,
	0x0a, 0x06, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x76, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x76, 0x61, 0x6c, 0x22, 0x19, 0x0a, 0x07,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x05, 0x49, 0x4f, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70,
	0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x64,
	0x22, 0x27, 0x0a, 0x05, 0x49, 0x4f, 0x52, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x74, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x74, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x01, 0x64, 0x22, 0x1d, 0x0a, 0x0b, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x22, 0x44, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0x93,
	0x02, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x25, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x6f,
	0x70, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52,
	0x65, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x30, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x63, 0x12, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x30, 0x01, 0x12, 0x22, 0x0a, 0x04, 0x45, 0x78,
	0x65, 0x63, 0x12, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x71,
	0x1a, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x04, 0x4b, 0x69, 0x6c, 0x6c, 0x12, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x69, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x12, 0x20, 0x0a, 0x02, 0x49, 0x4f, 0x12, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49,
	0x4f, 0x52, 0x65, 0x71, 0x1a, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x4f, 0x52, 0x65, 0x73,
	0x28, 0x01, 0x30, 0x01, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x3b, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_container_proto_rawDescOnce sync.Once
	file_container_proto_rawDescData = file_container_proto_rawDesc
)

func file_container_proto_rawDescGZIP() []byte {
	file_container_proto_rawDescOnce.Do(func() {
		file_container_proto_rawDescData = protoimpl.X.CompressGZIP(file_container_proto_rawDescData)
	})
	return file_container_proto_rawDescData
}

var file_container_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_container_proto_goTypes = []interface{}{
	(*StartReq)(nil),       // 0: api.StartReq
	(*StartRes)(nil),       // 1: api.StartRes
	(*StopReq)(nil),        // 2: api.StopReq
	(*StopRes)(nil),        // 3: api.StopRes
	(*Cap)(nil),            // 4: api.Cap
	(*Rlimit)(nil),         // 5: api.Rlimit
	(*Proc)(nil),           // 6: api.Proc
	(*ExecReq)(nil),        // 7: api.ExecReq
	(*ExecRes)(nil),        // 8: api.ExecRes
	(*KillReq)(nil),        // 9: api.KillReq
	(*KillRes)(nil),        // 10: api.KillRes
	(*ListReq)(nil),        // 11: api.ListReq
	(*ListRes)(nil),        // 12: api.ListRes
	(*IOReq)(nil),          // 13: api.IOReq
	(*IORes)(nil),          // 14: api.IORes
	(*ListProcReq)(nil),    // 15: api.ListProcReq
	(*ListProcRes)(nil),    // 16: api.ListProcRes
	(*ListReq_Filter)(nil), // 17: api.ListReq.Filter
}
var file_container_proto_depIdxs = []int32{
	4,  // 0: api.Proc.caps:type_name -> api.Cap
	5,  // 1: api.Proc.rlimits:type_name -> api.Rlimit
	6,  // 2: api.ExecReq.prog:type_name -> api.Proc
	6,  // 3: api.ExecRes.info:type_name -> api.Proc
	17, // 4: api.ListReq.filters:type_name -> api.ListReq.Filter
	6,  // 5: api.ListProcRes.info:type_name -> api.Proc
	0,  // 6: api.Task.Start:input_type -> api.StartReq
	2,  // 7: api.Task.Stop:input_type -> api.StopReq
	11, // 8: api.Task.List:input_type -> api.ListReq
	15, // 9: api.Task.ListProc:input_type -> api.ListProcReq
	7,  // 10: api.Task.Exec:input_type -> api.ExecReq
	9,  // 11: api.Task.Kill:input_type -> api.KillReq
	13, // 12: api.Task.IO:input_type -> api.IOReq
	1,  // 13: api.Task.Start:output_type -> api.StartRes
	3,  // 14: api.Task.Stop:output_type -> api.StopRes
	12, // 15: api.Task.List:output_type -> api.ListRes
	16, // 16: api.Task.ListProc:output_type -> api.ListProcRes
	8,  // 17: api.Task.Exec:output_type -> api.ExecRes
	10, // 18: api.Task.Kill:output_type -> api.KillRes
	14, // 19: api.Task.IO:output_type -> api.IORes
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_container_proto_init() }
func file_container_proto_init() {
	if File_container_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_container_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_container_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_container_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_container_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StopRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_container_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cap); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_container_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rlimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_container_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Proc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_container_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_container_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_container_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_container_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_container_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_container_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_container_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IOReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_container_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IORes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_container_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProcReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_container_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProcRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_container_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListReq_Filter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_container_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_container_proto_goTypes,
		DependencyIndexes: file_container_proto_depIdxs,
		MessageInfos:      file_container_proto_msgTypes,
	}.Build()
	File_container_proto = out.File
	file_container_proto_rawDesc = nil
	file_container_proto_goTypes = nil
	file_container_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TaskClient is the client API for Task service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TaskClient interface {
	// start the container
	Start(ctx context.Context, in *StartReq, opts ...grpc.CallOption) (*StartRes, error)
	Stop(ctx context.Context, in *StopReq, opts ...grpc.CallOption) (*StopRes, error)
	List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (Task_ListClient, error)
	// start a process
	ListProc(ctx context.Context, in *ListProcReq, opts ...grpc.CallOption) (Task_ListProcClient, error)
	Exec(ctx context.Context, in *ExecReq, opts ...grpc.CallOption) (*ExecRes, error)
	Kill(ctx context.Context, in *KillReq, opts ...grpc.CallOption) (*KillRes, error)
	IO(ctx context.Context, opts ...grpc.CallOption) (Task_IOClient, error)
}

type taskClient struct {
	cc grpc.ClientConnInterface
}

func NewTaskClient(cc grpc.ClientConnInterface) TaskClient {
	return &taskClient{cc}
}

func (c *taskClient) Start(ctx context.Context, in *StartReq, opts ...grpc.CallOption) (*StartRes, error) {
	out := new(StartRes)
	err := c.cc.Invoke(ctx, "/api.Task/Start", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) Stop(ctx context.Context, in *StopReq, opts ...grpc.CallOption) (*StopRes, error) {
	out := new(StopRes)
	err := c.cc.Invoke(ctx, "/api.Task/Stop", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (Task_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Task_serviceDesc.Streams[0], "/api.Task/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &taskListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Task_ListClient interface {
	Recv() (*ListRes, error)
	grpc.ClientStream
}

type taskListClient struct {
	grpc.ClientStream
}

func (x *taskListClient) Recv() (*ListRes, error) {
	m := new(ListRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *taskClient) ListProc(ctx context.Context, in *ListProcReq, opts ...grpc.CallOption) (Task_ListProcClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Task_serviceDesc.Streams[1], "/api.Task/ListProc", opts...)
	if err != nil {
		return nil, err
	}
	x := &taskListProcClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Task_ListProcClient interface {
	Recv() (*ListProcRes, error)
	grpc.ClientStream
}

type taskListProcClient struct {
	grpc.ClientStream
}

func (x *taskListProcClient) Recv() (*ListProcRes, error) {
	m := new(ListProcRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *taskClient) Exec(ctx context.Context, in *ExecReq, opts ...grpc.CallOption) (*ExecRes, error) {
	out := new(ExecRes)
	err := c.cc.Invoke(ctx, "/api.Task/Exec", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) Kill(ctx context.Context, in *KillReq, opts ...grpc.CallOption) (*KillRes, error) {
	out := new(KillRes)
	err := c.cc.Invoke(ctx, "/api.Task/Kill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *taskClient) IO(ctx context.Context, opts ...grpc.CallOption) (Task_IOClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Task_serviceDesc.Streams[2], "/api.Task/IO", opts...)
	if err != nil {
		return nil, err
	}
	x := &taskIOClient{stream}
	return x, nil
}

type Task_IOClient interface {
	Send(*IOReq) error
	Recv() (*IORes, error)
	grpc.ClientStream
}

type taskIOClient struct {
	grpc.ClientStream
}

func (x *taskIOClient) Send(m *IOReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *taskIOClient) Recv() (*IORes, error) {
	m := new(IORes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TaskServer is the server API for Task service.
type TaskServer interface {
	// start the container
	Start(context.Context, *StartReq) (*StartRes, error)
	Stop(context.Context, *StopReq) (*StopRes, error)
	List(*ListReq, Task_ListServer) error
	// start a process
	ListProc(*ListProcReq, Task_ListProcServer) error
	Exec(context.Context, *ExecReq) (*ExecRes, error)
	Kill(context.Context, *KillReq) (*KillRes, error)
	IO(Task_IOServer) error
}

// UnimplementedTaskServer can be embedded to have forward compatible implementations.
type UnimplementedTaskServer struct {
}

func (*UnimplementedTaskServer) Start(context.Context, *StartReq) (*StartRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Start not implemented")
}
func (*UnimplementedTaskServer) Stop(context.Context, *StopReq) (*StopRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Stop not implemented")
}
func (*UnimplementedTaskServer) List(*ListReq, Task_ListServer) error {
	return status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedTaskServer) ListProc(*ListProcReq, Task_ListProcServer) error {
	return status.Errorf(codes.Unimplemented, "method ListProc not implemented")
}
func (*UnimplementedTaskServer) Exec(context.Context, *ExecReq) (*ExecRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Exec not implemented")
}
func (*UnimplementedTaskServer) Kill(context.Context, *KillReq) (*KillRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Kill not implemented")
}
func (*UnimplementedTaskServer) IO(Task_IOServer) error {
	return status.Errorf(codes.Unimplemented, "method IO not implemented")
}

func RegisterTaskServer(s *grpc.Server, srv TaskServer) {
	s.RegisterService(&_Task_serviceDesc, srv)
}

func _Task_Start_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).Start(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Task/Start",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).Start(ctx, req.(*StartReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_Stop_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).Stop(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Task/Stop",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).Stop(ctx, req.(*StopReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TaskServer).List(m, &taskListServer{stream})
}

type Task_ListServer interface {
	Send(*ListRes) error
	grpc.ServerStream
}

type taskListServer struct {
	grpc.ServerStream
}

func (x *taskListServer) Send(m *ListRes) error {
	return x.ServerStream.SendMsg(m)
}

func _Task_ListProc_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListProcReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TaskServer).ListProc(m, &taskListProcServer{stream})
}

type Task_ListProcServer interface {
	Send(*ListProcRes) error
	grpc.ServerStream
}

type taskListProcServer struct {
	grpc.ServerStream
}

func (x *taskListProcServer) Send(m *ListProcRes) error {
	return x.ServerStream.SendMsg(m)
}

func _Task_Exec_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).Exec(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Task/Exec",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).Exec(ctx, req.(*ExecReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_Kill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KillReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TaskServer).Kill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Task/Kill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TaskServer).Kill(ctx, req.(*KillReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Task_IO_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(TaskServer).IO(&taskIOServer{stream})
}

type Task_IOServer interface {
	Send(*IORes) error
	Recv() (*IOReq, error)
	grpc.ServerStream
}

type taskIOServer struct {
	grpc.ServerStream
}

func (x *taskIOServer) Send(m *IORes) error {
	return x.ServerStream.SendMsg(m)
}

func (x *taskIOServer) Recv() (*IOReq, error) {
	m := new(IOReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Task_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Task",
	HandlerType: (*TaskServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Start",
			Handler:    _Task_Start_Handler,
		},
		{
			MethodName: "Stop",
			Handler:    _Task_Stop_Handler,
		},
		{
			MethodName: "Exec",
			Handler:    _Task_Exec_Handler,
		},
		{
			MethodName: "Kill",
			Handler:    _Task_Kill_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _Task_List_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListProc",
			Handler:       _Task_ListProc_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "IO",
			Handler:       _Task_IO_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "container.proto",
}
