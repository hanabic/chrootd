// Code generated by protoc-gen-go. DO NOT EDIT.
// source: containerpool.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListRes2 struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Config               []byte   `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRes2) Reset()         { *m = ListRes2{} }
func (m *ListRes2) String() string { return proto.CompactTextString(m) }
func (*ListRes2) ProtoMessage()    {}
func (*ListRes2) Descriptor() ([]byte, []int) {
	return fileDescriptor_282d6a60be737138, []int{0}
}

func (m *ListRes2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRes2.Unmarshal(m, b)
}
func (m *ListRes2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRes2.Marshal(b, m, deterministic)
}
func (m *ListRes2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRes2.Merge(m, src)
}
func (m *ListRes2) XXX_Size() int {
	return xxx_messageInfo_ListRes2.Size(m)
}
func (m *ListRes2) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRes2.DiscardUnknown(m)
}

var xxx_messageInfo_ListRes2 proto.InternalMessageInfo

func (m *ListRes2) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ListRes2) GetConfig() []byte {
	if m != nil {
		return m.Config
	}
	return nil
}

type CreateReq struct {
	Config               []byte   `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateReq) Reset()         { *m = CreateReq{} }
func (m *CreateReq) String() string { return proto.CompactTextString(m) }
func (*CreateReq) ProtoMessage()    {}
func (*CreateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_282d6a60be737138, []int{1}
}

func (m *CreateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateReq.Unmarshal(m, b)
}
func (m *CreateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateReq.Marshal(b, m, deterministic)
}
func (m *CreateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateReq.Merge(m, src)
}
func (m *CreateReq) XXX_Size() int {
	return xxx_messageInfo_CreateReq.Size(m)
}
func (m *CreateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateReq proto.InternalMessageInfo

func (m *CreateReq) GetConfig() []byte {
	if m != nil {
		return m.Config
	}
	return nil
}

type CreateRes struct {
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// reason of failure, if len(reason) == 0
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRes) Reset()         { *m = CreateRes{} }
func (m *CreateRes) String() string { return proto.CompactTextString(m) }
func (*CreateRes) ProtoMessage()    {}
func (*CreateRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_282d6a60be737138, []int{2}
}

func (m *CreateRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRes.Unmarshal(m, b)
}
func (m *CreateRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRes.Marshal(b, m, deterministic)
}
func (m *CreateRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRes.Merge(m, src)
}
func (m *CreateRes) XXX_Size() int {
	return xxx_messageInfo_CreateRes.Size(m)
}
func (m *CreateRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRes.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRes proto.InternalMessageInfo

func (m *CreateRes) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CreateRes) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type UpdateReq struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Config               []byte   `protobuf:"bytes,2,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateReq) Reset()         { *m = UpdateReq{} }
func (m *UpdateReq) String() string { return proto.CompactTextString(m) }
func (*UpdateReq) ProtoMessage()    {}
func (*UpdateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_282d6a60be737138, []int{3}
}

func (m *UpdateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReq.Unmarshal(m, b)
}
func (m *UpdateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReq.Marshal(b, m, deterministic)
}
func (m *UpdateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReq.Merge(m, src)
}
func (m *UpdateReq) XXX_Size() int {
	return xxx_messageInfo_UpdateReq.Size(m)
}
func (m *UpdateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReq proto.InternalMessageInfo

func (m *UpdateReq) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *UpdateReq) GetConfig() []byte {
	if m != nil {
		return m.Config
	}
	return nil
}

type UpdateRes struct {
	Config []byte `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	// reason of failure, if container == nil
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRes) Reset()         { *m = UpdateRes{} }
func (m *UpdateRes) String() string { return proto.CompactTextString(m) }
func (*UpdateRes) ProtoMessage()    {}
func (*UpdateRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_282d6a60be737138, []int{4}
}

func (m *UpdateRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRes.Unmarshal(m, b)
}
func (m *UpdateRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRes.Marshal(b, m, deterministic)
}
func (m *UpdateRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRes.Merge(m, src)
}
func (m *UpdateRes) XXX_Size() int {
	return xxx_messageInfo_UpdateRes.Size(m)
}
func (m *UpdateRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRes proto.InternalMessageInfo

func (m *UpdateRes) GetConfig() []byte {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *UpdateRes) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

type DeleteReq struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteReq) Reset()         { *m = DeleteReq{} }
func (m *DeleteReq) String() string { return proto.CompactTextString(m) }
func (*DeleteReq) ProtoMessage()    {}
func (*DeleteReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_282d6a60be737138, []int{5}
}

func (m *DeleteReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteReq.Unmarshal(m, b)
}
func (m *DeleteReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteReq.Marshal(b, m, deterministic)
}
func (m *DeleteReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteReq.Merge(m, src)
}
func (m *DeleteReq) XXX_Size() int {
	return xxx_messageInfo_DeleteReq.Size(m)
}
func (m *DeleteReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteReq proto.InternalMessageInfo

func (m *DeleteReq) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

type DeleteRes struct {
	// reason of failure, if len(reason) == 0
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRes) Reset()         { *m = DeleteRes{} }
func (m *DeleteRes) String() string { return proto.CompactTextString(m) }
func (*DeleteRes) ProtoMessage()    {}
func (*DeleteRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_282d6a60be737138, []int{6}
}

func (m *DeleteRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRes.Unmarshal(m, b)
}
func (m *DeleteRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRes.Marshal(b, m, deterministic)
}
func (m *DeleteRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRes.Merge(m, src)
}
func (m *DeleteRes) XXX_Size() int {
	return xxx_messageInfo_DeleteRes.Size(m)
}
func (m *DeleteRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRes.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRes proto.InternalMessageInfo

func (m *DeleteRes) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func init() {
	proto.RegisterType((*ListRes2)(nil), "api.ListRes2")
	proto.RegisterType((*CreateReq)(nil), "api.CreateReq")
	proto.RegisterType((*CreateRes)(nil), "api.CreateRes")
	proto.RegisterType((*UpdateReq)(nil), "api.UpdateReq")
	proto.RegisterType((*UpdateRes)(nil), "api.UpdateRes")
	proto.RegisterType((*DeleteReq)(nil), "api.DeleteReq")
	proto.RegisterType((*DeleteRes)(nil), "api.DeleteRes")
}

func init() {
	proto.RegisterFile("containerpool.proto", fileDescriptor_282d6a60be737138)
}

var fileDescriptor_282d6a60be737138 = []byte{
	// 262 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xc1, 0x4b, 0xc3, 0x30,
	0x14, 0xc6, 0x49, 0xd5, 0x6a, 0x1f, 0xdb, 0x84, 0x08, 0x32, 0xe2, 0x45, 0x26, 0xc2, 0x4e, 0x45,
	0xba, 0xe3, 0x6e, 0xce, 0xa3, 0x07, 0x29, 0x78, 0xf1, 0x16, 0xd7, 0x28, 0x0f, 0x4a, 0x5f, 0xd6,
	0xd7, 0x3f, 0xcd, 0x3f, 0x50, 0x9a, 0x64, 0xdd, 0x02, 0x2b, 0xec, 0xf8, 0xbd, 0xfc, 0xf2, 0xe5,
	0x7b, 0xef, 0x05, 0xee, 0xb6, 0xd4, 0x74, 0x1a, 0x1b, 0xd3, 0x5a, 0xa2, 0x3a, 0xb7, 0x2d, 0x75,
	0x24, 0x2f, 0xb4, 0x45, 0x75, 0x3b, 0x9c, 0xf8, 0xea, 0xa2, 0x80, 0x9b, 0x77, 0xe4, 0xae, 0x34,
	0x5c, 0xc8, 0x19, 0x24, 0x58, 0xcd, 0xc5, 0xa3, 0x58, 0x4e, 0xca, 0x04, 0x2b, 0x79, 0x0f, 0xe9,
	0x96, 0x9a, 0x1f, 0xfc, 0x9d, 0x27, 0xae, 0x16, 0xd4, 0xe2, 0x09, 0xb2, 0x4d, 0x6b, 0x74, 0x67,
	0x4a, 0xb3, 0x3b, 0x82, 0x44, 0x04, 0xad, 0x0e, 0x10, 0x9f, 0x72, 0x6e, 0x8d, 0x66, 0x6a, 0x9c,
	0x73, 0x56, 0x06, 0xd5, 0x5f, 0xfa, 0xb4, 0x55, 0x70, 0x3e, 0x37, 0xce, 0xfa, 0x70, 0x89, 0xc7,
	0xe2, 0x8c, 0xbe, 0xf8, 0x00, 0xd9, 0x9b, 0xa9, 0xcd, 0xc9, 0x17, 0xfb, 0x46, 0xf7, 0x87, 0x3c,
	0xe6, 0x50, 0xfc, 0x09, 0x98, 0x6e, 0xf6, 0x53, 0xfd, 0x20, 0xaa, 0xe5, 0x12, 0x52, 0xdf, 0xba,
	0x9c, 0xe5, 0xda, 0x62, 0x3e, 0x0c, 0x4b, 0xc5, 0x9a, 0x7b, 0xd2, 0x47, 0x0f, 0xe4, 0xd0, 0xbc,
	0x8a, 0xb5, 0x23, 0x7d, 0x94, 0x40, 0x0e, 0xa1, 0x55, 0xac, 0x59, 0x3e, 0xc3, 0x65, 0xbf, 0x51,
	0x39, 0x71, 0x75, 0xbf, 0xdc, 0x9d, 0x9a, 0x1e, 0x29, 0x2e, 0x5e, 0xc4, 0xeb, 0xf5, 0xd7, 0x55,
	0xbe, 0xd6, 0x16, 0xbf, 0x53, 0xf7, 0x11, 0x56, 0xff, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3f, 0x44,
	0xcc, 0x62, 0x35, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ContainerPoolClient is the client API for ContainerPool service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContainerPoolClient interface {
	Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateRes, error)
	Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateRes, error)
	Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*DeleteRes, error)
	List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (ContainerPool_ListClient, error)
}

type containerPoolClient struct {
	cc grpc.ClientConnInterface
}

func NewContainerPoolClient(cc grpc.ClientConnInterface) ContainerPoolClient {
	return &containerPoolClient{cc}
}

func (c *containerPoolClient) Create(ctx context.Context, in *CreateReq, opts ...grpc.CallOption) (*CreateRes, error) {
	out := new(CreateRes)
	err := c.cc.Invoke(ctx, "/api.ContainerPool/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *containerPoolClient) Update(ctx context.Context, in *UpdateReq, opts ...grpc.CallOption) (*UpdateRes, error) {
	out := new(UpdateRes)
	err := c.cc.Invoke(ctx, "/api.ContainerPool/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *containerPoolClient) Delete(ctx context.Context, in *DeleteReq, opts ...grpc.CallOption) (*DeleteRes, error) {
	out := new(DeleteRes)
	err := c.cc.Invoke(ctx, "/api.ContainerPool/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *containerPoolClient) List(ctx context.Context, in *ListReq, opts ...grpc.CallOption) (ContainerPool_ListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ContainerPool_serviceDesc.Streams[0], "/api.ContainerPool/List", opts...)
	if err != nil {
		return nil, err
	}
	x := &containerPoolListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ContainerPool_ListClient interface {
	Recv() (*ListRes2, error)
	grpc.ClientStream
}

type containerPoolListClient struct {
	grpc.ClientStream
}

func (x *containerPoolListClient) Recv() (*ListRes2, error) {
	m := new(ListRes2)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ContainerPoolServer is the server API for ContainerPool service.
type ContainerPoolServer interface {
	Create(context.Context, *CreateReq) (*CreateRes, error)
	Update(context.Context, *UpdateReq) (*UpdateRes, error)
	Delete(context.Context, *DeleteReq) (*DeleteRes, error)
	List(*ListReq, ContainerPool_ListServer) error
}

// UnimplementedContainerPoolServer can be embedded to have forward compatible implementations.
type UnimplementedContainerPoolServer struct {
}

func (*UnimplementedContainerPoolServer) Create(ctx context.Context, req *CreateReq) (*CreateRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedContainerPoolServer) Update(ctx context.Context, req *UpdateReq) (*UpdateRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedContainerPoolServer) Delete(ctx context.Context, req *DeleteReq) (*DeleteRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedContainerPoolServer) List(req *ListReq, srv ContainerPool_ListServer) error {
	return status.Errorf(codes.Unimplemented, "method List not implemented")
}

func RegisterContainerPoolServer(s *grpc.Server, srv ContainerPoolServer) {
	s.RegisterService(&_ContainerPool_serviceDesc, srv)
}

func _ContainerPool_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainerPoolServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ContainerPool/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainerPoolServer).Create(ctx, req.(*CreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContainerPool_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainerPoolServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ContainerPool/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainerPoolServer).Update(ctx, req.(*UpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContainerPool_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContainerPoolServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ContainerPool/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContainerPoolServer).Delete(ctx, req.(*DeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContainerPool_List_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ContainerPoolServer).List(m, &containerPoolListServer{stream})
}

type ContainerPool_ListServer interface {
	Send(*ListRes2) error
	grpc.ServerStream
}

type containerPoolListServer struct {
	grpc.ServerStream
}

func (x *containerPoolListServer) Send(m *ListRes2) error {
	return x.ServerStream.SendMsg(m)
}

var _ContainerPool_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ContainerPool",
	HandlerType: (*ContainerPoolServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _ContainerPool_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _ContainerPool_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _ContainerPool_Delete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "List",
			Handler:       _ContainerPool_List_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "containerpool.proto",
}
